{"version":3,"sources":["components/Button/index.ts","components/Input/index.ts","components/Loader/index.ts","components/Card/index.ts","components/Flex/index.ts","components/Table/index.ts","state/reducer.ts","state/index.ts","pages/Home/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","styled","props","padding","color","margin","fontSize","backgroundColor","border","borderRadius","fontWeight","fontStyle","fontFamily","cursor","Input","width","rotate","keyframes","Card","Flex","flexFlow","justifyContent","alignItems","screens","length","map","screen","size","definition","Table","div","flex","borderCollapse","THead","textAlign","TD","TR","stripe","reducer","state","action","type","endpoint","payload","events","api","initialState","undefined","ExtendedTD","ExtendedTHead","ErrorText","span","Home","useReducer","dispatch","useState","startBlock","setStartBlock","endBlock","setEndBlock","apiInjected","setApiInjected","listOfEvents","setListOfEvents","isLoading","setIsLoading","progress","setProgress","useForm","register","handleSubmit","errors","formState","setApi","loadEndBlockNumber","a","rpc","chain","getHeader","header","parseInt","number","toString","fetchEvents","eventDet","i","getBlockHash","blockHash","query","system","at","forEach","record","event","phase","detail","blockNumber","eventName","section","method","eventArguments","meta","docs","push","Math","floor","submit","useEffect","injectApi","provider","WsProvider","ApiPromise","create","startsWith","then","onSubmit","required","valueAsNumber","min","placeholder","onChange","e","target","value","completed","bgColor","ev","index","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6WA+BeA,EAfAC,YAAO,SAAPA,CAAH,iQACC,SAACC,GAAD,OAAWA,EAAMC,SAAW,UAC9B,SAACD,GAAD,OAAWA,EAAME,OAAS,WACzB,SAACF,GAAD,OAAWA,EAAMG,QAAU,SACxB,SAACH,GAAD,OAAWA,EAAMI,UAAY,UACtB,SAACJ,GAAD,OAAWA,EAAMK,iBAAmB,iBAC9C,SAACL,GAAD,OAAWA,EAAMM,QAAU,UACpB,SAACN,GAAD,OAAWA,EAAMO,cAAgB,SACnC,SAACP,GAAD,OAAWA,EAAMQ,YAAc,YAChC,SAACR,GAAD,OAAWA,EAAMS,WAAa,YAC7B,SAACT,GAAD,OAAWA,EAAMU,YAAc,gBACjC,SAACV,GAAD,OAAWA,EAAMI,UAAY,UAChC,SAACJ,GAAD,OAAWA,EAAMW,QAAU,aCFxBC,EAZDb,YAAO,QAAPA,CAAH,+LACA,SAACC,GAAD,OAAWA,EAAMa,OAAS,WACxB,SAACb,GAAD,OAAWA,EAAMC,SAAW,SAC1B,SAACD,GAAD,OAAWA,EAAMI,UAAY,UAC3B,SAACJ,GAAD,OAAWA,EAAMQ,YAAc,YAC/B,SAACR,GAAD,OAAWA,EAAMU,YAAc,gBACrC,SAACV,GAAD,OAAWA,EAAME,OAAS,WACzB,SAACF,GAAD,OAAWA,EAAMM,QAAU,oBACpB,SAACN,GAAD,OAAWA,EAAMO,cAAgB,SACxC,SAACP,GAAD,OAAWA,EAAMG,QAAU,SCrBjCW,EAASC,YAAH,wHCKGC,GDKAjB,YAAO,MAAPA,CAAH,yLAMGe,GChBFf,YAAO,MAAPA,CAAH,iGCQGkB,EAAOlB,YAAO,MAAPA,CAAH,wIAEF,SAACC,GAAD,OAAWA,EAAMkB,UAAY,cACvB,SAAClB,GAAD,OAAWA,EAAMmB,gBAAkB,YACvC,SAACnB,GAAD,OAAWA,EAAMoB,YAAc,YACpC,SAACpB,GAAD,OAAWA,EAAMG,QAAU,SAEnC,SAACH,GAAD,QACEA,EAAMqB,SACRrB,EAAMqB,QAAQC,OAAS,GACvBtB,EAAMqB,QAAQE,KACZ,SAACC,GAAD,8CACmCA,EAAOC,KAAO,KADjD,aAEID,EAAOE,kBCHJC,GDQS5B,IAAO6B,IAAV,0CACT,SAAC5B,GAAD,OAAWA,EAAM6B,MAAQ,SCTd9B,YAAO,QAAPA,CAAH,6EACG,SAACC,GAAD,OAAWA,EAAM8B,gBAAkB,cAC7C,SAAC9B,GAAD,OAAWA,EAAMa,OAAS,UAEjC,SAACb,GAAD,QACEA,EAAMqB,SACRrB,EAAMqB,QAAQC,OAAS,GACvBtB,EAAMqB,QAAQE,KACZ,SAACC,GAAD,8CACmCA,EAAOC,KAAO,KADjD,aAEID,EAAOE,mBAKJK,EAAQhC,YAAO,KAAPA,CAAH,iFACL,SAACC,GAAD,OAAWA,EAAMC,SAAW,UACzB,SAACD,GAAD,OAAWA,EAAMgC,WAAa,UAClC,SAAChC,GAAD,OAAWA,EAAMM,QAAU,UAG1B2B,EAAKlC,YAAO,KAAPA,CAAH,iFACF,SAACC,GAAD,OAAWA,EAAMC,SAAW,UACzB,SAACD,GAAD,OAAWA,EAAMgC,WAAa,UAClC,SAAChC,GAAD,OAAWA,EAAMM,QAAU,UAG1B4B,EAAKnC,YAAO,KAAPA,CAAH,oFAES,SAACC,GAAD,OAAWA,EAAMmC,QAAU,aCpBpCC,EAtBC,SAACC,EAAcC,GAC7B,OAAQA,EAAOC,MACb,IAAK,kBACH,OAAO,2BACFF,GADL,IAEEG,SAAUF,EAAOG,UAErB,IAAK,gBACH,OAAO,2BACFJ,GADL,IAEEK,OAAQJ,EAAOG,UAEnB,IAAK,eACH,OAAO,2BACFJ,GADL,IAEEM,IAAKL,EAAOG,UAEhB,QACE,OAAOJ,ICjBAO,EAAsB,CACjCJ,SAAU,wBACVE,OAAQ,KACRC,SAAKE,G,QCiBDC,EAAa/C,YAAOkC,EAAPlC,CAAH,8DAIVgD,EAAgBhD,YAAOgC,EAAPhC,CAAH,8DAIbiD,EAAYjD,IAAOkD,KAAV,+EAGH,SAACjD,GAAD,OAAWA,EAAMG,UA2Qd+C,EAxQF,WAAO,IAAD,QACjB,EAA0BC,qBAAWf,EAASQ,GAA9C,mBAAOP,EAAP,KAAce,EAAd,KACA,EAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAwCN,mBAAyB,IAAjE,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAAgCV,mBAAiB,GAAjD,mBAAOW,EAAP,KAAiBC,EAAjB,KAEA,EAIIC,cAHFC,GADF,EACEA,SACAC,GAFF,EAEEA,aACaC,GAHf,EAGEC,UAAaD,OAGTE,GAAS,SAAC9B,GAAD,OACbW,EAAS,CACPb,KAAM,eACNE,aASE+B,GAAkB,uCAAG,8BAAAC,EAAA,gFACJpC,EAAMM,WADF,aACJ,EAAW+B,IAAIC,MAAMC,YADjB,OACnBC,EADmB,OAEzBpB,EAAYqB,SAAQ,OAACD,QAAD,IAACA,OAAD,EAACA,EAAQE,OAAOC,aAFX,2CAAH,qDAalBC,GAAW,uCAAG,gCAAAR,EAAA,sDAClBV,GAAa,GACPmB,EAA2B,GAFf,IAAAT,EAAA,iBAGTU,GAHS,mBAAAV,EAAA,gFAIQpC,EAAMM,WAJd,aAIQ,EAAW+B,IAAIC,MAAMS,aAAaD,GAJ1C,cAIVE,EAJU,0BAKKhD,EAAMM,WALX,aAKK,EAAW2C,MAAMC,OAAO7C,OAAO8C,GAA/B,OACnBH,QADmB,IACnBA,OADmB,EACnBA,EAAWL,YANG,cAQaS,SAAQ,SAACC,GACpC,IAAQC,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MACXC,EAAkB,CAAEC,YAAaX,GACrCU,EAAM,2BACDA,GADC,IAEJE,UAAU,GAAD,OAAKJ,EAAMK,QAAX,YAAsBL,EAAMM,QACrCC,eAAe,GAAD,OAAKP,EAAMQ,KAAKC,KAAKpB,YACnCY,MAAOA,EAAMZ,aAEfE,EAASmB,KAAKR,MAEhB5B,EAAYqC,KAAKC,MAAOpB,EAAI3B,EAAY,MAnBxB,0CAGT2B,EAAI7B,EAHK,YAGO6B,GAAK3B,GAHZ,yCAGT2B,GAHS,eAGsBA,IAHtB,sBAqBlBtB,EAAgBqB,GAChBnB,GAAa,GACbE,EAAY,GAvBM,4CAAH,qDA0BXuC,GAAM,uCAAG,sBAAA/B,EAAA,sEACPQ,KADO,2CAAH,qDA+BZ,OA3BAwB,qBAAU,WACR,IAAMC,EAAS,uCAAG,8BAAAjC,EAAA,6DACVkC,EAAW,IAAIC,IAAWvE,EAAMG,UADtB,SAEEqE,IAAWC,OAAO,CAAEH,aAFtB,OAEVhE,EAFU,OAGhB4B,GAAO5B,GACPgB,GAAe,GAJC,2CAAH,qDAMf+C,MACC,IAEHD,qBAAU,WACR,GACIpE,EAAMG,WACPH,EAAMG,SAASuE,WAAW,UACzB1E,EAAMG,SAASuE,WAAW,WAC5B,CACA,IAAMJ,EAAW,IAAIC,IAAWvE,EAAMG,UACtCqE,IAAWC,OAAO,CAAEH,aAAYK,KAAKzC,OAEtC,CAAClC,EAAMG,WAEViE,qBAAU,WACJ/C,GACFc,OAED,CAACd,IAGF,gCACE,sBAAMuD,SAAU7C,GAAaoC,IAA7B,SACE,eAACvF,EAAD,CACEd,OAAO,OACPe,SAAS,WACTC,eAAe,SACfC,WAAW,SACXC,QAAS,CACP,CACEI,KAAM,IACNC,WAAW,wIARjB,UAgBE,eAACT,EAAD,CACEd,OAAO,MACPe,SAAS,cACTC,eAAe,SACfC,WAAW,SAJb,UAME,cAAC,EAAD,2BACM+C,GAAS,aAAc,CACzB+C,UAAU,EACVC,eAAe,EACfC,IAAK,KAJT,IAMEjH,OAAO,MACPF,QAAQ,OACRsC,KAAK,SACL8E,YAAY,oBACZ/G,OAAO,oBACPC,aAAa,MACb+G,SAtGmB,SAACC,GAC9BhE,EAAcgE,EAAEC,OAAOC,QAsGbA,MAAOnE,KAEoB,cAA5B,UAAAe,GAAOf,kBAAP,eAAmBf,OAClB,cAACS,EAAD,CAAW7C,OAAO,YAAlB,+CAI2B,SAA5B,UAAAkE,GAAOf,kBAAP,eAAmBf,OAClB,cAACS,EAAD,CAAW7C,OAAO,YAAlB,mDAKJ,eAACc,EAAD,CACEd,OAAO,MACPe,SAAS,cACTC,eAAe,SACfC,WAAW,SAJb,UAME,cAAC,EAAD,2BACM+C,GAAS,WAAY,CAAE+C,UAAU,EAAMC,eAAe,KAD5D,IAEEhH,OAAO,MACPF,QAAQ,OACRsC,KAAK,SACL8E,YAAY,kBACZ/G,OAAO,oBACPC,aAAa,MACb+G,SA9HiB,SAACC,GAC5B9D,EAAY8D,EAAEC,OAAOC,QA8HXA,MAAOjE,KAEkB,cAA1B,UAAAa,GAAOb,gBAAP,eAAiBjB,OAChB,cAACS,EAAD,CAAW7C,OAAO,YAAlB,gDAKJ,eAACc,EAAD,CACEd,OAAO,MACPe,SAAS,cACTC,eAAe,SACfC,WAAW,SAJb,UAME,cAAC,EAAD,2BACM+C,GAAS,WAAY,CAAE+C,UAAU,KADvC,IAEE/G,OAAO,MACPF,QAAQ,OACRoH,YAAY,iBACZ/G,OAAO,oBACPC,aAAa,MACb+G,SAnKQ,SAACC,GAAD,OAClBnE,EAAS,CACPb,KAAM,kBACNE,QAAS8E,EAAEC,OAAOC,SAiKVA,MAAOpF,EAAMG,YAEY,cAA1B,UAAA6B,GAAO7B,gBAAP,eAAiBD,OAChB,cAACS,EAAD,CAAW7C,OAAO,YAAlB,qCAGJ,cAACc,EAAD,CACEC,SAAS,cACTC,eAAe,SACfC,WAAW,SACXjB,OAAO,MAJT,SAME,cAAC,EAAD,CACEA,OAAO,cACPF,QAAQ,OACRI,gBAAgB,OAChBH,MAAM,OACNK,aAAa,MACbH,SAAS,OACTmC,KAAK,SAPP,oBAYDuB,GACC,cAAC7C,EAAD,CACEC,SAAS,cACTC,eAAe,SACfC,WAAW,SACXjB,OAAO,OAJT,SAME,cAAC,IAAD,CAAauH,UAAW1D,EAAU2D,QAAQ,QAAQ9G,MAAM,gBAKhE,8BACE,cAAC,EAAD,UACE,eAACc,EAAD,CACEN,QAAS,CACP,CACEI,KAAM,IACNC,WAAW,4CAJjB,UAUE,gCACE,eAACQ,EAAD,WACE,cAACa,EAAD,2BACA,cAACA,EAAD,yBACA,cAACA,EAAD,6BACA,cAACA,EAAD,yBAGJ,gCACGa,EAAatC,OAAS,EACrBsC,EAAarC,KAAI,SAACqG,EAAIC,GAAL,OACf,eAAC3F,EAAD,WACE,cAACY,EAAD,UAAa8E,EAAG9B,cAChB,cAAChD,EAAD,UAAa8E,EAAG7B,YAChB,cAACjD,EAAD,UAAa8E,EAAG1B,iBAChB,cAACpD,EAAD,UAAa8E,EAAGhC,UAJTiC,MAQX,cAAC3F,EAAD,UACE,cAACY,EAAD,qCClSHgF,EAFH,kBAAM,cAAC,EAAD,KCWHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dddd254d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\ninterface ButtonProps {\n  padding?: string;\n  color?: string;\n  margin?: string;\n  fontSize?: string;\n  backgroundColor?: string;\n  border?: string;\n  borderRadius?: string;\n  fontWeight?: \"bold\" | \"bolder\" | \"normal\";\n  cursor?: string;\n  fontStyle?: \"italic\" | \"normal\";\n  fontFamily?: string;\n}\n\nconst Button = styled(\"button\")<ButtonProps>`\n  padding: ${(props) => props.padding || \"10px\"};\n  color: ${(props) => props.color || \"black\"};\n  margin: ${(props) => props.margin || \"4px\"};\n  font-size: ${(props) => props.fontSize || \"12px\"};\n  background-color: ${(props) => props.backgroundColor || \"transparent\"};\n  border: ${(props) => props.border || \"none\"};\n  border-radius: ${(props) => props.borderRadius || \"0px\"};\n  font-weight: ${(props) => props.fontWeight || \"normal\"};\n  font-style: ${(props) => props.fontStyle || \"normal\"};\n  font-family: ${(props) => props.fontFamily || \"sans-serif\"};\n  font-size: ${(props) => props.fontSize || \"14px\"};\n  cursor: ${(props) => props.cursor || \"pointer\"};\n`;\n\nexport default Button;\n","import styled from \"styled-components\";\n\ninterface InputProps {\n  padding?: string;\n  width?: string;\n  fontSize?: string;\n  fontWeight?: \"bold\" | \"bolder\" | \"normal\";\n  color?: string;\n  border?: string;\n  borderRadius?: string;\n  fontFamily?: string;\n  margin?: string;\n}\n\nconst Input = styled(\"input\")<InputProps>`\n  width: ${(props) => props.width || \"200px\"};\n  padding: ${(props) => props.padding || \"8px\"};\n  font-size: ${(props) => props.fontSize || \"12px\"};\n  font-weight: ${(props) => props.fontWeight || \"normal\"};\n  font-family: ${(props) => props.fontFamily || \"sans-serif\"};\n  color: ${(props) => props.color || \"black\"};\n  border: ${(props) => props.border || \"1px solid #000\"};\n  border-radius: ${(props) => props.borderRadius || \"0px\"};\n  margin: ${(props) => props.margin || \"0px\"};\n`;\n\nexport default Input;\n","import styled, { keyframes } from \"styled-components\";\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Loader = styled(\"div\")<any>`\n  border: 2px solid #f3f3f3;\n  border-top: 2px solid #3498db;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  animation: ${rotate} 2s linear infinite;\n`;\n\nexport default Loader;\n","import styled from \"styled-components\";\n\nconst Card = styled(\"div\")<any>`\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  transition: 0.3s;\n`;\n\nexport default Card;\n","import styled from \"styled-components\";\nimport { CommonDefs } from \"../commonDefs\";\n\ninterface FlexProps {\n  flexFlow?: \"row wrap\" | \"column wrap\" | \"row nowrap\" | \"column nowrap\";\n  justifyContent?: string;\n  alignItems?: string;\n  margin?: string;\n}\n\nexport const Flex = styled(\"div\")<FlexProps & CommonDefs>`\n  display: flex;\n  flex-flow: ${(props) => props.flexFlow || \"row wrap\"};\n  justify-content: ${(props) => props.justifyContent || \"center\"};\n  align-items: ${(props) => props.alignItems || \"center\"};\n  margin: ${(props) => props.margin || \"0px\"};\n\n  ${(props) =>\n    !!props.screens &&\n    props.screens.length > 0 &&\n    props.screens.map(\n      (screen) =>\n        `@media screen and (max-width: ${screen.size + \"px\"}) ${\n          screen.definition\n        }`\n    )}\n`;\n\nexport const Spacer = styled.div<{ flex?: string }>`\n  flex: ${(props) => props.flex || \"0 1\"};\n`;\n","import styled from \"styled-components\";\nimport { CommonDefs } from \"../commonDefs\";\n\ninterface TableProps {\n  borderCollapse?: \"collapse\" | \"separate\";\n  width?: string;\n}\n\ninterface THeadProps {\n  padding?: string;\n  textAlign?: string;\n  border?: string;\n}\n\ninterface TDProps {\n  padding?: string;\n  textAlign?: string;\n  border?: string;\n}\n\nexport const Table = styled(\"table\")<TableProps & CommonDefs>`\n  border-collapse: ${(props) => props.borderCollapse || \"collapse\"};\n  width: ${(props) => props.width || \"100%\"};\n\n  ${(props) =>\n    !!props.screens &&\n    props.screens.length > 0 &&\n    props.screens.map(\n      (screen) =>\n        `@media screen and (max-width: ${screen.size + \"px\"}) ${\n          screen.definition\n        }`\n    )}\n`;\n\nexport const THead = styled(\"th\")<THeadProps>`\n  padding: ${(props) => props.padding || \"12px\"};\n  text-align: ${(props) => props.textAlign || \"left\"};\n  border: ${(props) => props.border || \"none\"};\n`;\n\nexport const TD = styled(\"td\")<TDProps>`\n  padding: ${(props) => props.padding || \"12px\"};\n  text-align: ${(props) => props.textAlign || \"left\"};\n  border: ${(props) => props.border || \"none\"};\n`;\n\nexport const TR = styled(\"tr\")<{ stripe?: string }>`\n  &:nth-child(even) {\n    background-color: ${(props) => props.stripe || \"#f2f2f2\"};\n  }\n`;\n","import { State } from \".\";\n\ninterface Action {\n  type: \"CHANGE_ENDPOINT\" | \"EVENT_FETCHED\" | \"API_INJECTED\";\n  payload: any;\n}\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"CHANGE_ENDPOINT\":\n      return {\n        ...state,\n        endpoint: action.payload\n      };\n    case \"EVENT_FETCHED\":\n      return {\n        ...state,\n        events: action.payload\n      };\n    case \"API_INJECTED\":\n      return {\n        ...state,\n        api: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import type { ApiPromise } from \"@polkadot/api\";\n\nexport interface State {\n  endpoint: string;\n  events: any;\n  api?: ApiPromise;\n}\n\nexport const initialState: State = {\n  endpoint: \"wss://rpc.polkadot.io\",\n  events: null,\n  api: undefined\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useReducer, useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { ApiPromise, WsProvider } from \"@polkadot/api\";\nimport { Vec } from \"@polkadot/types\";\nimport { EventRecord } from \"@polkadot/types/interfaces\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport {\n  Input,\n  Flex,\n  Button,\n  Table,\n  THead,\n  TD,\n  TR,\n  Card\n} from \"../../components\";\nimport reducer from \"../../state/reducer\";\nimport { initialState } from \"../../state\";\n\ninterface Details {\n  blockNumber?: number;\n  eventName?: string;\n  eventArguments?: string;\n  phase?: string;\n}\n\nconst ExtendedTD = styled(TD)`\n  border-bottom: 1px solid #ddd;\n`;\n\nconst ExtendedTHead = styled(THead)`\n  border-bottom: 1px solid #ddd;\n`;\n\nconst ErrorText = styled.span<any>`\n  color: red;\n  font-size: 13px;\n  margin: ${(props) => props.margin};\n`;\n\nconst Home = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [startBlock, setStartBlock] = useState(0);\n  const [endBlock, setEndBlock] = useState(0);\n  const [apiInjected, setApiInjected] = useState(false);\n  const [listOfEvents, setListOfEvents] = useState<Array<Details>>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [progress, setProgress] = useState<number>(0);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm();\n\n  const setApi = (payload: any) =>\n    dispatch({\n      type: \"API_INJECTED\",\n      payload\n    });\n\n  const setEndpoint = (e: any) =>\n    dispatch({\n      type: \"CHANGE_ENDPOINT\",\n      payload: e.target.value\n    });\n\n  const loadEndBlockNumber = async () => {\n    const header = await state.api?.rpc.chain.getHeader();\n    setEndBlock(parseInt(header?.number.toString() as string));\n  };\n\n  const handleStartBlockChange = (e: any) => {\n    setStartBlock(e.target.value);\n  };\n\n  const handleEndBlockChange = (e: any) => {\n    setEndBlock(e.target.value);\n  };\n\n  const fetchEvents = async () => {\n    setIsLoading(true);\n    const eventDet: Array<Details> = [];\n    for (let i = startBlock; i <= endBlock; i++) {\n      const blockHash = await state.api?.rpc.chain.getBlockHash(i);\n      const events = await state.api?.query.system.events.at(\n        blockHash?.toString() as string\n      );\n      (events as Vec<EventRecord>).forEach((record) => {\n        const { event, phase } = record;\n        let detail: Details = { blockNumber: i };\n        detail = {\n          ...detail,\n          eventName: `${event.section}.${event.method}`,\n          eventArguments: `${event.meta.docs.toString()}`,\n          phase: phase.toString()\n        };\n        eventDet.push(detail);\n      });\n      setProgress(Math.floor((i / endBlock) * 100));\n    }\n    setListOfEvents(eventDet);\n    setIsLoading(false);\n    setProgress(0);\n  };\n\n  const submit = async () => {\n    await fetchEvents();\n  };\n\n  useEffect(() => {\n    const injectApi = async () => {\n      const provider = new WsProvider(state.endpoint);\n      const api = await ApiPromise.create({ provider });\n      setApi(api);\n      setApiInjected(true);\n    };\n    injectApi();\n  }, []);\n\n  useEffect(() => {\n    if (\n      !!state.endpoint &&\n      (state.endpoint.startsWith(\"ws://\") ||\n        state.endpoint.startsWith(\"wss://\"))\n    ) {\n      const provider = new WsProvider(state.endpoint);\n      ApiPromise.create({ provider }).then(setApi);\n    }\n  }, [state.endpoint]);\n\n  useEffect(() => {\n    if (apiInjected) {\n      loadEndBlockNumber();\n    }\n  }, [apiInjected]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(submit)}>\n        <Flex\n          margin=\"16px\"\n          flexFlow=\"row wrap\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          screens={[\n            {\n              size: 360,\n              definition: `{\n              flex-flow: column wrap;\n              justify-content: center;\n              align-items: center;\n            }`\n            }\n          ]}\n        >\n          <Flex\n            margin=\"3px\"\n            flexFlow=\"column wrap\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Input\n              {...register(\"startBlock\", {\n                required: true,\n                valueAsNumber: true,\n                min: 1\n              })}\n              margin=\"3px\"\n              padding=\"12px\"\n              type=\"number\"\n              placeholder=\"Enter start block\"\n              border=\"2px solid #dcdcdc\"\n              borderRadius=\"5px\"\n              onChange={handleStartBlockChange}\n              value={startBlock}\n            />\n            {errors.startBlock?.type === \"required\" && (\n              <ErrorText margin=\"2px 0 0 0\">\n                Starting block number is required\n              </ErrorText>\n            )}\n            {errors.startBlock?.type === \"min\" && (\n              <ErrorText margin=\"2px 0 0 0\">\n                Block number cannot be less than 1\n              </ErrorText>\n            )}\n          </Flex>\n          <Flex\n            margin=\"3px\"\n            flexFlow=\"column wrap\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Input\n              {...register(\"endBlock\", { required: true, valueAsNumber: true })}\n              margin=\"3px\"\n              padding=\"12px\"\n              type=\"number\"\n              placeholder=\"Enter end block\"\n              border=\"2px solid #dcdcdc\"\n              borderRadius=\"5px\"\n              onChange={handleEndBlockChange}\n              value={endBlock}\n            />\n            {errors.endBlock?.type === \"required\" && (\n              <ErrorText margin=\"2px 0 0 0\">\n                Ending block number is required\n              </ErrorText>\n            )}\n          </Flex>\n          <Flex\n            margin=\"3px\"\n            flexFlow=\"column wrap\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Input\n              {...register(\"endpoint\", { required: true })}\n              margin=\"3px\"\n              padding=\"12px\"\n              placeholder=\"Enter endpoint\"\n              border=\"2px solid #dcdcdc\"\n              borderRadius=\"5px\"\n              onChange={setEndpoint}\n              value={state.endpoint}\n            />\n            {errors.endpoint?.type === \"required\" && (\n              <ErrorText margin=\"2px 0 0 0\">Endpoint is required</ErrorText>\n            )}\n          </Flex>\n          <Flex\n            flexFlow=\"column wrap\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            margin=\"3px\"\n          >\n            <Button\n              margin=\"3px 8px 3px\"\n              padding=\"12px\"\n              backgroundColor=\"teal\"\n              color=\"#fff\"\n              borderRadius=\"5px\"\n              fontSize=\"15px\"\n              type=\"submit\"\n            >\n              Scan\n            </Button>\n          </Flex>\n          {isLoading && (\n            <Flex\n              flexFlow=\"column wrap\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              margin=\"18px\"\n            >\n              <ProgressBar completed={progress} bgColor=\"green\" width=\"100%\" />\n            </Flex>\n          )}\n        </Flex>\n      </form>\n      <div>\n        <Card>\n          <Table\n            screens={[\n              {\n                size: 360,\n                definition: `{\n            width: 80%;\n          }`\n              }\n            ]}\n          >\n            <thead>\n              <TR>\n                <ExtendedTHead>Block Number</ExtendedTHead>\n                <ExtendedTHead>Event Name</ExtendedTHead>\n                <ExtendedTHead>Event Metadata</ExtendedTHead>\n                <ExtendedTHead>Phase</ExtendedTHead>\n              </TR>\n            </thead>\n            <tbody>\n              {listOfEvents.length > 0 ? (\n                listOfEvents.map((ev, index) => (\n                  <TR key={index}>\n                    <ExtendedTD>{ev.blockNumber}</ExtendedTD>\n                    <ExtendedTD>{ev.eventName}</ExtendedTD>\n                    <ExtendedTD>{ev.eventArguments}</ExtendedTD>\n                    <ExtendedTD>{ev.phase}</ExtendedTD>\n                  </TR>\n                ))\n              ) : (\n                <TR>\n                  <ExtendedTD>No Data</ExtendedTD>\n                </TR>\n              )}\n            </tbody>\n          </Table>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Home from \"./pages/Home\";\n\nconst App = () => <Home />;\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}